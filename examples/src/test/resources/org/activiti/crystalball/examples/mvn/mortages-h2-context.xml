<?xml version="1.0" encoding="UTF-8"?>
<!--
  #%L
  examples
  %%
  Copyright (C) 2012 - 2013 crystalball
  %%
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at
  
       http://www.apache.org/licenses/LICENSE-2.0
  
  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
  #L%
  -->


<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans   http://www.springframework.org/schema/beans/spring-beans.xsd">
    <!-- property placeholder -->
    <!-- I was not able to set system properties in antrun mvn plugin -->
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
	    <property name="location" value="classpath:application.properties" />
	    <property name="ignoreResourceNotFound" value="true" /> <!-- Ignore file not found -->
	    <property name="ignoreUnresolvablePlaceholders" value="true" /> <!-- Ignore when tokens are not found --> 
	    <!-- Token that separates default values on a placeholder-by-placeholder basis e.g. ${server.name?localhost} -->
	    <property name="valueSeparator" value="?" />
        <property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE"/>	    
	</bean>

	<!-- *************************************** -->
	<!--   SIMULATOR                             -->
	<!-- *************************************** -->
	<bean id="simulationRun" class="org.activiti.crystalball.simulator.SimulationRun">
	
		<constructor-arg ref="&amp;eventCalendar"/>
		<constructor-arg ref="&amp;simProcessEngine"/>
		<constructor-arg>
			<map>
				<entry key="START_PROCESS" value-ref="startProcessEventHandler"/>			
				<entry key="TASK_CREATE" value-ref="claimEventHandler"/>						
				<entry key="COMPLETE" value-ref="completeEventHandler"/>
			</map>
		</constructor-arg>
		<constructor-arg>
			<list>
				<bean class="org.activiti.crystalball.simulator.evaluator.UnfinishedUserTasksEvaluator">
					<property name="type" value="unfinished_task" />
				</bean>
			</list>
		</constructor-arg>
	</bean>
	
	<bean id="eventCalendar" class="org.activiti.crystalball.simulator.SimpleEventCalendarFactory">
		<constructor-arg>
			<bean class="org.activiti.crystalball.simulator.SimulationEventComparator"/>
		</constructor-arg>
	</bean>
				
	<!--   simulation event handlers              -->
	<bean id="startProcessEventHandler" class="org.activiti.crystalball.simulator.impl.StartProcessEventHandler">
			<!-- example 1. solution
			count property to 20 	
			and start new process instance each new hour
			
			<property name="count" value="20" />
			<property name="period" value="3600000" /-->						
			
	
	 		<property name="count" value="1" /> <!-- start one process instance -->
	 		<property name="eventType" value="START_PROCESS" /> 
	 		<property name="processToStartKey" value="mortagedemo-0" />	 		
	</bean>
	
	<bean id="claimEventHandler" class="org.activiti.crystalball.simulator.impl.SimpleClaimTaskEventHandler">
		<property name="userTaskExecutor" ref="userTaskExecutor" />
	</bean>
	
	<bean id="completeEventHandler" class="org.activiti.crystalball.simulator.impl.CompleteEventHandler">
		<property name="userTaskExecutor" ref="userTaskExecutor"/>	
	</bean>

	<!--  User tasks executors                    -->      
    <bean id="userTaskExecutor" class="org.activiti.crystalball.simulator.executor.impl.ConstantUserTaskExecutor">
     		<constructor-arg value="1000"/>
     		<property name="taskVariablesMap">
     			<map>
     				<!-- TASK preliminary_judgement possibilities -->
     				<entry key="preliminary_judgement">
     					<list>
     						<map>
     							<entry key="approved"><value type="java.lang.Boolean">True</value></entry>
     						</map>
     						<map>
     							<entry key="approved"><value type="java.lang.Boolean">False</value></entry>
     						</map>
     					</list>
     				</entry>
     				<entry key="final_evaluation">
     					<list>
     						<map>
     							<entry key="ok"><value type="java.lang.Boolean">True</value></entry>
     						</map>
     						<map>
     							<entry key="ok"><value type="java.lang.Boolean">False</value></entry>
     						</map>
     					</list>
     				</entry>
     			</map>
     		</property>
    </bean>
	                           
	<!-- *************************************** -->
	<!-- SIMULATION PROCESS ENGINE               -->
	<!-- *************************************** -->    
	<bean id="simDataSource" class="org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy">
        <property name="targetDataSource">
            <bean class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
                <property name="driverClass" value="org.h2.Driver"/>
                <property name="url" value="jdbc:h2:${_SIM_DB_PATH?target/mvn};DB_CLOSE_DELAY=1000"/>
                <property name="username" value="sa"/>
                <property name="password" value=""/>
            </bean>
        </property>
    </bean>

    <bean id="simTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager" >
        <property name="dataSource" ref="simDataSource"/>
    </bean>

	<bean id="simProcessEngineConfiguration" class="org.activiti.spring.SpringProcessEngineConfiguration">
		<property name="dataSource" ref="simDataSource" />
		<property name="transactionManager" ref="simTransactionManager" />
		<property name="databaseSchemaUpdate" value="true" />
		<property name="jobExecutorActivate" value="false" />
		<property name="history" value="full" />
        <property name="customDefaultBpmnParseHandlers">
            <list>
                <bean class="org.activiti.crystalball.simulator.impl.bpmn.parser.handler.SimulatorScriptTaskParseHandler"/>
                <bean class="org.activiti.crystalball.simulator.impl.bpmn.parser.handler.SimulatorServiceTaskParseHandler"/>
                <bean class="org.activiti.crystalball.simulator.impl.bpmn.parser.handler.SimulatorUserTaskParseHandler"/>
            </list>
        </property>
        <!-- deploy mortages process from the first simulation run -->
		<property name="deploymentResources" value="**/classes/**/MortageDemo-0.bpmn" />
	</bean>

    <bean id="simProcessEngine" class="org.activiti.spring.ProcessEngineFactoryBean" >
        <property name="processEngineConfiguration" ref="simProcessEngineConfiguration"/>
    </bean>

    <bean id="simRepositoryService" factory-bean="simProcessEngine" factory-method="getRepositoryService"/>
    <bean id="simRuntimeService" factory-bean="simProcessEngine" factory-method="getRuntimeService"/>
    <bean id="simTaskService" factory-bean="simProcessEngine" factory-method="getTaskService"/>
    <bean id="simHistoryService" factory-bean="simProcessEngine" factory-method="getHistoryService"/>
    <bean id="simManagementService" factory-bean="simProcessEngine" factory-method="getManagementService"/>
    <bean id="simIdentityService" factory-bean="simProcessEngine" factory-method="getIdentityService"/>

	<!-- *************************************** -->
	<!-- REPORT GENERATORS                       -->
	<!-- *************************************** -->    
	<bean id="reportInstances" class="org.activiti.crystalball.generator.HistoricInstancesGenerator">
        <property name="historyService" ref="simHistoryService"/>
        <property name="repositoryService" ref="simRepositoryService"/>	
        <!-- highlight all touched nodes -->
		<property name="highlightColorIntervalList">
        	<list>
        		<!-- example 2. - add more color intervals
        		comment out beans bellow and try the next example 
         		<bean class="org.activiti.crystalball.generator.ColorInterval">
        			<constructor-arg value="0" />
        			<constructor-arg value="0" />
        			<constructor-arg value="red"/>
        		</bean>
        		<bean class="org.activiti.crystalball.generator.ColorInterval">
        			<constructor-arg value="1" />
        			<constructor-arg value="7" />
        			<constructor-arg value="yellow" />
        		</bean>
        		<bean class="org.activiti.crystalball.generator.ColorInterval">
        			<constructor-arg value="8" />
        			<constructor-arg value="green" />
        		</bean-->

         		<bean class="org.activiti.crystalball.generator.ColorInterval">
        			<constructor-arg value="0" />
        			<constructor-arg value="0" />
        			<constructor-arg value="red"/>
        		</bean>
        		<bean class="org.activiti.crystalball.generator.ColorInterval">
        			<constructor-arg value="1" />
        			<constructor-arg value="green" />
        		</bean>
        	</list>
        </property>	
	</bean>
</beans>