<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:activiti="http://www.activiti.org/schema/spring/components"
       xsi:schemaLocation="http://www.springframework.org/schema/beans   http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.activiti.org/schema/spring/components http://www.activiti.org/schema/spring/components/activiti.xsd">
	<!-- *************************************** -->
	<!--   SIMULATOR                             -->
	<!-- *************************************** -->
	<bean id="simulationRun" class="org.activiti.crystalball.simulator.SimulationRun">

		<constructor-arg>
			<bean class="org.activiti.crystalball.simulator.SimulationContext">
	       		<property name="runtimeService" ref="simRuntimeService"/>
	       		<property name="taskService" ref="simTaskService"/>
	       		<!-- simulation run audit is logged into simEngine history log -->
	       		<property name="historyService" ref="simHistoryService"/>
	       		<property name="eventCalendar" ref="eventCalendar"/>
			</bean>
		</constructor-arg>
		<constructor-arg>
			<map>
				<entry key="TASK_CREATE" value-ref="claimEventHandler"/>
				<entry key="COMPLETE" value-ref="completeEventHandler"/>
				<entry key="START_PROCESS" value-ref="startProcessEventHandler"/>
				<entry key="LOG">
					<bean class="org.activiti.crystalball.simulator.LogTimeEventHandler">
						<constructor-arg value="LOG"/>
						<!-- log delta in minutes (24*60=1440) -->
						<constructor-arg value="720"/>
					</bean>
				</entry>
			</map>
		</constructor-arg>
		<constructor-arg>
			<list>
				<bean class="org.activiti.crystalball.simulator.UnfinishedUserTasksEvaluator">
					<property name="repositoryService" ref="simRepositoryService" />
					<property name="type" value="unfinished_task" />
				</bean>
			</list>
		</constructor-arg>
		<constructor-arg ref="simDefaultJobExecutor"/>
	</bean>
	
	<bean id="eventCalendar" class="org.activiti.crystalball.simulator.EventCalendar">
		<constructor-arg>
			<bean class="org.activiti.crystalball.simulator.SimulationEventComparator"/>
		</constructor-arg>
	</bean>
	
	
	<!--   simulation event handlers              -->
	<bean id="claimEventHandler" class="org.activiti.crystalball.simulator.impl.ClaimTaskEventHandler">
	       		<property name="identityService" ref="simIdentityService"/>
	       		<property name="taskService" ref="simTaskService"/>
	       		<property name="userTaskExecutor" ref="userTaskExecutor"/>
	</bean>
		
	<bean id="completeEventHandler" class="org.activiti.crystalball.simulator.impl.CompleteEventHandler">
		<property name="userTaskExecutor" ref="userTaskExecutor"/>
	</bean>
	
	<bean id="startProcessEventHandler" class="org.activiti.crystalball.simulator.impl.StartProcessEventHandler">
	 		<property name="period" value="3600000" /> <!-- start new process each HOUR -->
	 		<property name="eventType" value="START_PROCESS" /> 
	 		<property name="processToStartKey" value="parallelusertaskprocess" />	 		
	</bean>
	
	<!--  User tasks executors                    -->
    <bean id="userTaskExecutor" class="org.activiti.crystalball.simulator.executor.impl.ConstantUserMapTaskExecutor">
       	<property name="backUpExecutor" ref="backUpTaskExecutor"/>
       	<property name="userExecutionMap">
       		<map key-type="java.lang.String" value-type="java.lang.Integer">
       			<entry key="user1" value="1800000" /> <!-- user1 will work on one task 0.5 hour -->
       			<entry key="user2" value="3600000" /> <!-- user2 will work on one task 1 hour -->
       			<entry key="user3" value="2400000" /> <!-- user3 will work on one task 40 mins -->
       			<entry key="user4" value="3000000" /> <!-- user4 will work on one task 50 mins -->
       			<entry key="user5" value="3000000" /> <!-- user5 will work on one task 50 mins -->
       		</map>
       	</property>
       	
    </bean>
       
    <bean id="backUpTaskExecutor" class="org.activiti.crystalball.simulator.executor.impl.ConstantUserTaskExecutor">
     		<constructor-arg value="1000"/>
    </bean>
</beans>